@using Blazored.LocalStorage
@using Blazored.SessionStorage
@using ColorSet.Components
@using FlareLib
@using Microsoft.AspNetCore.Components.Web
@using Superset.Web.State

@inject ILocalStorageService LocalStorage

@inherits Microsoft.AspNetCore.Components.LayoutComponentBase

@code {

    private ElementClickHandler ElementClickHandler { get; } = new ElementClickHandler();

    ThemeLoader _themeLoader;
    private readonly UpdateTrigger _trigger = new Superset.Common.UpdateTrigger();

    protected override async Task OnInitializedAsync()
    {
        _themeLoader = new ThemeLoader(LocalStorage, new Configuration().ResourceManifests, "Dark");
        _themeLoader.OnComplete += () => _trigger.Trigger();

        await _themeLoader.Load();
        
    //        ElementClickHandler.OnOuterClickHandled += async () => StateHasChanged();
    }

}

<TriggerWrapper Trigger="@_trigger">
    @if (_themeLoader.Complete)
    {
        <CascadingValue Value="@ElementClickHandler">
            @_themeLoader.RenderLink()
            @Body
        </CascadingValue>
    }
</TriggerWrapper>